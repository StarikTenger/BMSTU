#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 4435 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"trace.scm\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"unit-test.scm\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"assert.scm\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LAB_4.scm\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(4
 #"; == \xD0\x90\xD0\xA7\xD0\x98\xD0\x92\xD0\x9A\xD0\x98 ==============="
 #"===================================+"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(5
 #"; 1. Else (\xD1\x81\xD0\xB4\xD0\xB0\xD0\xBD\xD0\xBE \xD0\xB2\xD0\xBC"
 #"\xD0\xB5\xD1\x81\xD1\x82\xD0\xB5 \xD1\x81 \xD0\xBB\xD0\xB0\xD0\xB1"
 #"\xD0\xBE\xD1\x80\xD0\xB0\xD1\x82\xD0\xBE\xD1\x80\xD0\xBD\xD0\xBE\xD0"
 #"\xB9)                       |"
) 0 0 24 29 1 #"\n"
0 0 17 3 96
(6
 #"; 2. \xD0\x92\xD0\xBB\xD0\xBE\xD0\xB6\xD0\xB5\xD0\xBD\xD0\xBD\xD1\x8B"
 #"\xD0\xB9 if (\xD1\x81\xD0\xB4\xD0\xB0\xD0\xBD\xD0\xBE \xD0\xB2\xD0"
 #"\xBC\xD0\xB5\xD1\x81\xD1\x82\xD0\xB5 \xD1\x81 \xD0\xBB\xD0\xB0\xD0"
 #"\xB1\xD0\xBE\xD1\x80\xD0\xB0\xD1\x82\xD0\xBE\xD1\x80\xD0\xBD\xD0\xBE"
 #"\xD0\xB9)               |"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(7
 #"; 3. \xD0\xA6\xD0\xB8\xD0\xBA\xD0\xBB\xD1\x8B while (\xD1\x81 \xD0"
 #"\xBF\xD1\x80\xD0\xB5\xD0\xB4\xD1\x83\xD1\x81\xD0\xBB\xD0\xBE\xD0\xB2"
 #"\xD0\xB8\xD0\xB5\xD0\xBC) \xD0\xB8 until (\xD1\x81 \xD0\xBF\xD0\xBE"
 #"\xD1\x81\xD1\x82\xD1\x83\xD1\x81\xD0\xBB\xD0\xBE\xD0\xB2\xD0\xB8\xD0"
 #"\xB5\xD0\xBC)    |"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#"; 4. Break/continue                                           |"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; 5. switch-case                                              |"
0 0 24 29 1 #"\n"
0 0 17 3 101
(8
 #"; 6. lambda-\xD1\x84\xD1\x83\xD0\xBD\xD0\xBA\xD1\x86\xD0\xB8\xD0\xB8,"
 #" \xD0\xBA\xD0\xBE\xD0\xB2\xD0\xB5\xD0\xBD\xD0\xBD\xD1\x8B\xD0\xB9 "
 #"\xD0\xB2\xD1\x8B\xD0\xB7\xD0\xBE\xD0\xB2 (\xD1\x80\xD0\xB5\xD0\xB0"
 #"\xD0\xBB\xD0\xB8\xD0\xB7\xD0\xBE\xD0\xB2\xD0\xB0\xD0\xBD \xD0\xBA\xD0"
 #"\xBE\xD0\xBC\xD0\xB0\xD0\xBD\xD0\xB4\xD0\xBE\xD0\xB9 do)  |"
) 0 0 24 29 1 #"\n"
0 0 17 3 104
(9
 #"; 7. \xD0\xA5\xD0\xB2\xD0\xBE\xD1\x81\xD1\x82\xD0\xBE\xD0\xB2\xD0\xB0"
 #"\xD1\x8F \xD1\x80\xD0\xB5\xD0\xBA\xD1\x83\xD1\x80\xD1\x81\xD0\xB8\xD1"
 #"\x8F (\xD1\x80\xD0\xB5\xD0\xB0\xD0\xBB\xD0\xB8\xD0\xB7\xD1\x83\xD0"
 #"\xB5\xD1\x82\xD1\x81\xD1\x8F \xD1\x87\xD0\xB5\xD1\x80\xD0\xB5\xD0\xB7"
 #" \xD0\xBE\xD0\xBF\xD0\xB5\xD1\x80\xD0\xB0\xD1\x82\xD0\xBE\xD1\x80 con"
 #"tinue) |"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(10
 #"; 8. \xD0\x93\xD0\xBB\xD0\xBE\xD0\xB1\xD0\xB0\xD0\xBB\xD1\x8C\xD0\xBD"
 #"\xD1\x8B\xD0\xB5 \xD0\xBF\xD0\xB5\xD1\x80\xD0\xB5\xD0\xBC\xD0\xB5\xD0"
 #"\xBD\xD0\xBD\xD1\x8B\xD0\xB5                                    |"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#"; ============================================================+"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Some operations"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"op="
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"op<"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"op>"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"format-logic"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"op-not"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"format-logic"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"op-and"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"format-logic"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 5 #"true?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"op-or"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"format-logic"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 5 #"true?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"return-stack"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"words"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"varaibles"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 14 3 3 #"beg"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 3 #"end"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 3 #"beg"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 14 3 3 #"beg"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"skip-if"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"endif"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"else"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"skip-if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 7 #"balance"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"skip-switch"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"endswitch"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 15 3 4 #"case"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 15 3 4 #"case"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"endswitch"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 1 #"i"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 6 #"switch"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                      ( "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"endswitch"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 11 #"skip-switch"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 15 3 4 #"case"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 16 #"interpret-symbol"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 46 #")                                             "
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"symbol"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 17 3 56
#";(cout << i << \" \" << stack << \" => \" << symbol << endl)"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 8 #"; Number"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 12 #"; Arithmetic"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"-"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"/"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"mod"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"neg"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 9 #"; Compare"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"="
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"op="
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #">"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"op>"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"<"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"op<"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 7 #"; Logic"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"not"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 6 #"op-not"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"and"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 6 #"op-and"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"or"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"op-or"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 3 25 #"                         "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 18 #"; Stack operations"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"drop"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"swap"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dup"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #") "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"over"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #") "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"rot"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #") ("
0 0 14 3 5 #"cdddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"depth"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #") "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 4 #"; If"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 7 #"skip-if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"else"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 7 #"skip-if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 11 #"; Procedure"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 6 #"define"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 5 #"words"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"end"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"end"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"exit"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"endlambda"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"endlambda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 7 #"; While"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"while"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 70
(11
 #"                                                                     "
 #"("
) 0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 72
(12
 #"                                                                     "
 #"  ("
) 0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"while"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"endwhile"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 72 12 0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 70 11 0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 72 12 0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"endwhile"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 7 #"; Until"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"until"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 70 11 0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 72 12 0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 29 1 #"\n"
0 0 24 3 78
(13
 #"                                                                     "
 #"        ("
) 0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 79
(14
 #"                                                                     "
 #"         ("
) 0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"until"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"enduntil"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 78
(15
 #"                                                                     "
 #"         "
) 0 0 14 3 12 #"return-stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 70 11 0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 72 12 0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"enduntil"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 44 #"))                                          "
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 10 #"; Continue"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"continue"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"enduntil"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 15 3 6 #"lambda"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 7 #"; Break"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"break"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 8 #"; Switch"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"switch"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 11 #"skip-switch"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          ))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"endcase"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"endswitch"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 11 #"; Varaibles"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"var"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"varaibles"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")) "
0 0 14 3 9 #"varaibles"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 14 3 9 #"varaibles"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assq"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 14 3 9 #"varaibles"
0 0 24 3 3 #")) "
0 0 14 3 5 #"stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 17 3 8 #"; Lambda"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 6 #"lambda"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"skip"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"endlambda"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                       (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 2 #"do"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 12 #"return-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                          ))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       )"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 16 #"interpret-symbol"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 16 #"interpret-symbol"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Unit-testing"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tests"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 33
(16
 #"; \xD0\x9F\xD1\x80\xD0\xBE\xD1\x81\xD1\x82\xD0\xB5\xD0\xB9\xD1\x88"
 #"\xD0\xB8\xD0\xB5 \xD1\x82\xD0\xB5\xD1\x81\xD1\x82\xD1\x8B"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"26"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 14 3 3 #"neg"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"/"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 2 #"or"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"over"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 14 3 5 #"depth"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"depth"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 53
(17
 #"; \xD0\x9D\xD0\xB5\xD1\x81\xD0\xBA\xD0\xBE\xD0\xBB\xD1\x8C\xD0\xBA"
 #"\xD0\xBE \xD1\x82\xD0\xB5\xD1\x81\xD1\x82\xD0\xBE\xD0\xB2 \xD0\xB8"
 #"\xD0\xB7 \xD1\x83\xD1\x81\xD0\xBB\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x8F"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 6 #" #(   "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"abs"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"neg"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"abs"
0 0 24 3 6 #"    ) "
0 0 17 3 20
(18
 #"; \xD0\xBF\xD1\x80\xD0\xBE\xD0\xB3\xD1\x80\xD0\xB0\xD0\xBC\xD0\xBC"
 #"\xD0\xB0"
) 0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"-9"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 6 #" #(   "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"abs"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"neg"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 3 #"abs"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 2 #"-9"
0 0 24 3 1 #" "
0 0 14 3 3 #"abs"
0 0 24 3 9 #"      ) ("
0 0 14 3 5 #"quote"
0 0 24 3 6 #" ())) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 6 #" #(   "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"<0?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"signum"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"<0?"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 6 #"signum"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 14 3 6 #"signum"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 6 #"signum"
0 0 24 3 10 #"       ) ("
0 0 14 3 5 #"quote"
0 0 24 3 6 #" ())) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 6 #" #(   "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"--"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"=1?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"=1?"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 2 #"--"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 9 #"factorial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 8 #"     ) ("
0 0 14 3 5 #"quote"
0 0 24 3 6 #" ())) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 6 #" #(   "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"=1?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"--"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"fib"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"=1?"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 2 #"--"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 2 #"--"
0 0 24 3 1 #" "
0 0 14 3 3 #"fib"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 3 #"fib"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"make-fib"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 3 #"fib"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 2 #"--"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 8 #"make-fib"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 8 #"make-fib"
0 0 24 3 8 #"     ) ("
0 0 14 3 5 #"quote"
0 0 24 3 6 #" ())) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 2 #"34"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 6 #" #(   "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"gcd"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"=0?"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 4 #"over"
0 0 24 3 1 #" "
0 0 14 3 3 #"mod"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"gcd"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"99"
0 0 24 3 1 #" "
0 0 14 3 3 #"gcd"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 3 #"234"
0 0 24 3 1 #" "
0 0 21 3 4 #"8100"
0 0 24 3 1 #" "
0 0 14 3 3 #"gcd"
0 0 24 3 6 #"    ) "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 9 #"; if-else"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 3 #"-10"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 3 #"-10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 12 #"; \320\246\320\270\320\272\320\273\321\213"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"while"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"endwhile"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 14 3 5 #"while"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 14 3 8 #"endwhile"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 3 #"end"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 4 #"5040"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 5 #"until"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"enduntil"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 31
(19
 #"; \xD0\x92\xD0\xBB\xD0\xBE\xD0\xB6\xD0\xB5\xD0\xBD\xD0\xBD\xD1\x8B"
 #"\xD0\xB5 \xD1\x86\xD0\xB8\xD0\xBA\xD0\xBB\xD1\x8B"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 5 #"while"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 5 #"while"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 8 #"endwhile"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 8 #"endwhile"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 35
(20
 #"; \xD0\x9E\xD0\xBF\xD0\xB5\xD1\x80\xD0\xB0\xD1\x82\xD0\xBE\xD1\x80"
 #"\xD1\x8B break/continue"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"while"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 5 #"break"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 8 #"endwhile"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"while"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mod"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 8 #"continue"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 8 #"endwhile"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"64"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"until"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mod"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 8 #"continue"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 8 #"enduntil"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"64"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"while"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mod"
0 0 24 3 1 #" "
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 8 #"continue"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 8 #"endwhile"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"32"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"until"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mod"
0 0 24 3 1 #" "
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 8 #"continue"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 14 3 8 #"enduntil"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"64"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 36
(21
 #"; \xD0\x9A\xD0\xBE\xD0\xBD\xD1\x81\xD1\x82\xD1\x80\xD1\x83\xD0\xBA"
 #"\xD1\x86\xD0\xB8\xD1\x8F switch-case"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 14 3 9 #"endswitch"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"11"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 14 3 9 #"endswitch"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"22"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 3 1 #" "
0 0 14 3 9 #"endswitch"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"33"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 27
(22
 #"; \xD0\x92\xD0\xBB\xD0\xBE\xD0\xB6\xD0\xB5\xD0\xBD\xD0\xBD\xD1\x8B"
 #"\xD0\xB9 switch"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mod"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 6 #"switch"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 6 #"switch"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 9 #"endswitch"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 9 #"endswitch"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                      ) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"17"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mod"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 6 #"switch"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 6 #"switch"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 7 #"endcase"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 9 #"endswitch"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 9 #"endswitch"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                      ) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 43
(23
 #"; \xD0\x93\xD0\xBB\xD0\xBE\xD0\xB1\xD0\xB0\xD0\xBB\xD1\x8C\xD0\xBD"
 #"\xD1\x8B\xD0\xB5 \xD0\xBF\xD0\xB5\xD1\x80\xD0\xB5\xD0\xBC\xD0\xB5\xD0"
 #"\xBD\xD0\xBD\xD1\x8B\xD0\xB5"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"prod"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 5 #"while"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 4 #"prod"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"prod"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 5 #"check"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 8 #"endwhile"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 4 #"prod"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 3 #"120"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 62
(24
 #"; \xD0\x94\xD0\xB5\xD0\xBC\xD0\xBE\xD0\xBD\xD1\x81\xD1\x82\xD1\x80"
 #"\xD0\xB0\xD1\x86\xD0\xB8\xD1\x8F \xD1\x85\xD0\xB2\xD0\xBE\xD1\x81\xD1"
 #"\x82\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB9 \xD1\x80\xD0\xB5\xD0\xBA\xD1\x83"
 #"\xD1\x80\xD1\x81\xD0\xB8\xD0\xB8"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"  "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 8 #"continue"
0 0 24 3 1 #" "
0 0 14 3 5 #"endif"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"  "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 15 3 6 #"lambda"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"-"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 3 #"dup"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 2 #"if"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 3 #"rot"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 3 #"dup"
0 0 24 3 1 #" "
0 0 14 3 3 #"rot"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 8 #"continue"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 5 #"endif"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 9 #"endlambda"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 15 3 2 #"do"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 4 #"drop"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 3 #"end"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 4 #"fact"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 5 #"40320"
0 0 24 3 1 #" "
0 0 21 3 3 #"720"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 23
#"; Lambda-\321\204\321\203\320\275\320\272\321\206\320\270\320\270"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"endlambda"
0 0 24 3 1 #" "
0 0 15 3 2 #"do"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"interpret"
0 0 24 3 3 #" #("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"endlambda"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 15 3 2 #"do"
0 0 24 3 1 #" "
0 0 14 3 4 #"swap"
0 0 24 3 1 #" "
0 0 15 3 2 #"do"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 24 3 1 #" "
0 0 14 3 5 #"tests"
0 0 24 3 1 #")"
0           0
